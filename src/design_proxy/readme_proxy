代理模式：
	在代理模式中，一个类代表另一个类的功能。这种类型的设计模式属于结构性模式。在代理模式
	中，我们创建具有现有对象的对象，以便向外界提供功能接口。
	
意图：	
	为其他对象提供一种代理以控制对这个对象的访问。

主要解决：
	在直接访问对象时带来的问题。比如说：要访问的对象在远程的机器上。在面向对象系统中，有
	些对象由于某些原因（比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的
	访问），直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对
	此对象的访问层。
	
何时使用：
	在想访问一个类时做一些控制。
	
关键代码：
	实现与被代理类组合。

应用实例：
	* 桌面的快捷方式
	* 买火车票不一定在火车站买，也可以去代售点
	
优点：
	* 高拓展
	* 智能化
	* 职责清晰

缺点：
	由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理
	速度变慢。实现代理模式需要额外的工作，有些代理模式的实现非常复杂。

注意事项： 
	* 和适配器模式的区别：适配器模式主要改变所考虑对象的接口，而代理模式不能改变
	所代理类的接口。
	* 和装饰器模式的区别：装饰器模式为了增强功能，而代理模式是为了加以控制。